{
  "openapi": "3.0.1",
  "info": {
    "title": "Book_Hub_Web_API",
    "version": "1.0"
  },
  "paths": {
    "/api/Admin/AddBook": {
      "post": {
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "AvailableQuantity",
                  "Cost",
                  "GenreId",
                  "Isbn",
                  "Title",
                  "TotalQuantity"
                ],
                "type": "object",
                "properties": {
                  "Isbn": {
                    "type": "string"
                  },
                  "Title": {
                    "pattern": "^[A-Za-z\\s]+$",
                    "type": "string"
                  },
                  "Author": {
                    "pattern": "^[A-Za-z\\s]+$",
                    "type": "string"
                  },
                  "Publication": {
                    "pattern": "^[A-Za-z\\s]+$",
                    "type": "string"
                  },
                  "PublishedDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "Edition": {
                    "type": "string"
                  },
                  "Language": {
                    "pattern": "^[A-Za-z\\s]+$",
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "Cost": {
                    "type": "number",
                    "format": "double"
                  },
                  "AvailableQuantity": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "TotalQuantity": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "GenreId": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "Isbn": {
                  "style": "form"
                },
                "Title": {
                  "style": "form"
                },
                "Author": {
                  "style": "form"
                },
                "Publication": {
                  "style": "form"
                },
                "PublishedDate": {
                  "style": "form"
                },
                "Edition": {
                  "style": "form"
                },
                "Language": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Cost": {
                  "style": "form"
                },
                "AvailableQuantity": {
                  "style": "form"
                },
                "TotalQuantity": {
                  "style": "form"
                },
                "GenreId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/GetBorrowed": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Borrowed"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Borrowed"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Borrowed"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/GetFines": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fines"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fines"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fines"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/GetGenre": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Genres"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Genres"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Genres"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/GetLog": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogUserActivity"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogUserActivity"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogUserActivity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/GetNotification": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notifications"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notifications"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notifications"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/GetReservation": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reservations"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reservations"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reservations"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/GetUser": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/GetAllConsumerQueries": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/AcknowledgeConsumerQuery": {
      "post": {
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "queryId": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "queryId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/RemoveBook": {
      "patch": {
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "bookid": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "bookid": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Books"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Books"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Books"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/Updatebook": {
      "patch": {
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "BookId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "AvailableQuantity": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "TotalQuantity": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "BookId": {
                  "style": "form"
                },
                "AvailableQuantity": {
                  "style": "form"
                },
                "TotalQuantity": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Books"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Books"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Books"
                }
              }
            }
          }
        }
      }
    },
    "/api/Home/GetAllBooks": {
      "get": {
        "tags": [
          "Home"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Home/GenerateOTP": {
      "post": {
        "tags": [
          "Home"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "emailAddress": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "emailAddress": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Home/Validate": {
      "post": {
        "tags": [
          "Home"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Email",
                  "PasswordHash"
                ],
                "type": "object",
                "properties": {
                  "Email": {
                    "pattern": "^[a-zA-Z0-9._%+-]+(?:\\.[a-zA-Z0-9._%+-]+)*@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
                    "type": "string"
                  },
                  "PasswordHash": {
                    "maxLength": 20,
                    "minLength": 8,
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "Email": {
                  "style": "form"
                },
                "PasswordHash": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Home/Login": {
      "post": {
        "tags": [
          "Home"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Email",
                  "PasswordHash"
                ],
                "type": "object",
                "properties": {
                  "Email": {
                    "pattern": "^[a-zA-Z0-9._%+-]+(?:\\.[a-zA-Z0-9._%+-]+)*@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
                    "type": "string"
                  },
                  "PasswordHash": {
                    "maxLength": 20,
                    "minLength": 8,
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "Email": {
                  "style": "form"
                },
                "PasswordHash": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Home/Logout": {
      "post": {
        "tags": [
          "Home"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "userId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Home/CreateUser": {
      "post": {
        "tags": [
          "Home"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Address",
                  "Email",
                  "Name",
                  "PasswordHash",
                  "Phone"
                ],
                "type": "object",
                "properties": {
                  "Name": {
                    "pattern": "^[A-Za-z\\s]+$",
                    "type": "string"
                  },
                  "Email": {
                    "pattern": "^[a-zA-Z0-9._%+-]+(?:\\.[a-zA-Z0-9._%+-]+)*@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
                    "type": "string"
                  },
                  "Phone": {
                    "maxLength": 10,
                    "minLength": 10,
                    "pattern": "^[-+]?\\d+$",
                    "type": "string"
                  },
                  "Address": {
                    "type": "string"
                  },
                  "PasswordHash": {
                    "maxLength": 20,
                    "minLength": 8,
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "Name": {
                  "style": "form"
                },
                "Email": {
                  "style": "form"
                },
                "Phone": {
                  "style": "form"
                },
                "Address": {
                  "style": "form"
                },
                "PasswordHash": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Home/UpdateUser": {
      "patch": {
        "tags": [
          "Home"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "UserId"
                ],
                "type": "object",
                "properties": {
                  "UserId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Name": {
                    "pattern": "^[A-Za-z\\s]+$",
                    "type": "string"
                  },
                  "Phone": {
                    "pattern": "^\\d{10}$",
                    "type": "string"
                  },
                  "Address": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "UserId": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "Phone": {
                  "style": "form"
                },
                "Address": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Home/DeleteUser": {
      "post": {
        "tags": [
          "Home"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "userId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Home/ForgotPassword": {
      "post": {
        "tags": [
          "Home"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "emailAddress": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "emailAddress": {
                  "style": "form"
                },
                "newPassword": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Home/AddContactUsQuery": {
      "post": {
        "tags": [
          "Home"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Description",
                  "Email",
                  "Query_Type"
                ],
                "type": "object",
                "properties": {
                  "Email": {
                    "pattern": "^[a-zA-Z0-9._%+-]+(?:\\.[a-zA-Z0-9._%+-]+)*@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
                    "type": "string"
                  },
                  "Query_Type": {
                    "$ref": "#/components/schemas/Contact_Us_Query_Type"
                  },
                  "Description": {
                    "pattern": "^[a-zA-Z0-9\\s.,]*$",
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "Email": {
                  "style": "form"
                },
                "Query_Type": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/GetBookByBookId": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "bookId": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "bookId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/GetBookByISBN": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "isbn": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "isbn": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/GetBooksByGenre": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "genreId": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "genreId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/GetBooksByAuthor": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "authorName": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "authorName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/BorrowBook": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "bookId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "userId": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "bookId": {
                  "style": "form"
                },
                "userId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/ReturnBook": {
      "patch": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "borrowId": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "borrowId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/ReportLostBook": {
      "patch": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "borrowId": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "borrowId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/ReserveBook": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "bookId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "userId": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "bookId": {
                  "style": "form"
                },
                "userId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/CancelBookReservation": {
      "patch": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "reservationId": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "reservationId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/ResetPassword": {
      "patch": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Email",
                  "NewPassword",
                  "OldPassword",
                  "UserId"
                ],
                "type": "object",
                "properties": {
                  "UserId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Email": {
                    "pattern": "^[a-zA-Z0-9._%+-]+(?:\\.[a-zA-Z0-9._%+-]+)*@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
                    "type": "string"
                  },
                  "OldPassword": {
                    "maxLength": 20,
                    "minLength": 8,
                    "type": "string"
                  },
                  "NewPassword": {
                    "maxLength": 20,
                    "minLength": 8,
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "UserId": {
                  "style": "form"
                },
                "Email": {
                  "style": "form"
                },
                "OldPassword": {
                  "style": "form"
                },
                "NewPassword": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/GetNotificationsByUserId": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "userId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/GetReservationsByUserId": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "userId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/GetBorrowedByUserId": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "userId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Action_Type": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Books": {
        "required": [
          "availableQuantity",
          "bookId",
          "cost",
          "genreId",
          "isbn",
          "title",
          "totalQuantity"
        ],
        "type": "object",
        "properties": {
          "bookId": {
            "pattern": "^[-+]?\\d+$",
            "type": "integer",
            "format": "int32"
          },
          "isbn": {
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "minLength": 1,
            "pattern": "^[A-Za-z\\s]+$",
            "type": "string"
          },
          "author": {
            "pattern": "^[A-Za-z\\s]+$",
            "type": "string",
            "nullable": true
          },
          "publication": {
            "pattern": "^[A-Za-z\\s]+$",
            "type": "string",
            "nullable": true
          },
          "publishedDate": {
            "type": "string",
            "format": "date"
          },
          "edition": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "pattern": "^[A-Za-z\\s]+$",
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "cost": {
            "type": "number",
            "format": "double"
          },
          "availableQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "totalQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "genreId": {
            "type": "integer",
            "format": "int32"
          },
          "genres": {
            "$ref": "#/components/schemas/Genres"
          },
          "borrowed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Borrowed"
            },
            "nullable": true
          },
          "reservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reservations"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Borrow_Status": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Borrowed": {
        "required": [
          "bookId",
          "borrowDate",
          "borrowId",
          "borrowStatus",
          "returnDeadline",
          "userId"
        ],
        "type": "object",
        "properties": {
          "borrowId": {
            "pattern": "^[-+]?\\d+$",
            "type": "integer",
            "format": "int32"
          },
          "bookId": {
            "pattern": "^[-+]?\\d+$",
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "pattern": "^[-+]?\\d+$",
            "type": "integer",
            "format": "int32"
          },
          "borrowDate": {
            "type": "string",
            "format": "date"
          },
          "returnDeadline": {
            "type": "string",
            "format": "date"
          },
          "returnDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "borrowStatus": {
            "$ref": "#/components/schemas/Borrow_Status"
          },
          "book": {
            "$ref": "#/components/schemas/Books"
          },
          "user": {
            "$ref": "#/components/schemas/Users"
          },
          "fines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Fines"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Contact_Us_Query_Type": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Fine_Paid_Status": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Fine_Type": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Fines": {
        "required": [
          "borrowId",
          "fineAmount",
          "fineId",
          "finePaidStatus",
          "fineType"
        ],
        "type": "object",
        "properties": {
          "fineId": {
            "pattern": "^[-+]?\\d+$",
            "type": "integer",
            "format": "int32"
          },
          "borrowId": {
            "pattern": "^[-+]?\\d+$",
            "type": "integer",
            "format": "int32"
          },
          "fineType": {
            "$ref": "#/components/schemas/Fine_Type"
          },
          "fineAmount": {
            "type": "number",
            "format": "double"
          },
          "finePaidStatus": {
            "$ref": "#/components/schemas/Fine_Paid_Status"
          },
          "paidDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "borrowed": {
            "$ref": "#/components/schemas/Borrowed"
          }
        },
        "additionalProperties": false
      },
      "Genres": {
        "required": [
          "description",
          "genreId",
          "name"
        ],
        "type": "object",
        "properties": {
          "genreId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "books": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Books"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogUserActivity": {
        "required": [
          "actionType",
          "logId",
          "timestamp",
          "userId"
        ],
        "type": "object",
        "properties": {
          "logId": {
            "pattern": "^[-+]?\\d+$",
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "pattern": "^[-+]?\\d+$",
            "type": "integer",
            "format": "int32"
          },
          "actionType": {
            "$ref": "#/components/schemas/Action_Type"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/Users"
          }
        },
        "additionalProperties": false
      },
      "Notification_Type": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Notifications": {
        "required": [
          "messageDescription",
          "messageType",
          "notificationId",
          "sentDate",
          "userId"
        ],
        "type": "object",
        "properties": {
          "notificationId": {
            "pattern": "^[-+]?\\d+$",
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "pattern": "^[-+]?\\d+$",
            "type": "integer",
            "format": "int32"
          },
          "messageType": {
            "$ref": "#/components/schemas/Notification_Type"
          },
          "messageDescription": {
            "minLength": 1,
            "type": "string"
          },
          "sentDate": {
            "type": "string",
            "format": "date"
          },
          "users": {
            "$ref": "#/components/schemas/Users"
          }
        },
        "additionalProperties": false
      },
      "Reservation_Status": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Reservations": {
        "required": [
          "applicationTimestamp",
          "bookId",
          "reservationId",
          "reservationStatus",
          "userId"
        ],
        "type": "object",
        "properties": {
          "reservationId": {
            "pattern": "^[-+]?\\d+$",
            "type": "integer",
            "format": "int32"
          },
          "bookId": {
            "pattern": "^[-+]?\\d+$",
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "pattern": "^[-+]?\\d+$",
            "type": "integer",
            "format": "int32"
          },
          "applicationTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "expectedAvailabilityDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "reservationExpiryDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "reservationStatus": {
            "$ref": "#/components/schemas/Reservation_Status"
          },
          "book": {
            "$ref": "#/components/schemas/Books"
          },
          "users": {
            "$ref": "#/components/schemas/Users"
          }
        },
        "additionalProperties": false
      },
      "User_Role": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Users": {
        "required": [
          "accountCreatedDate",
          "address",
          "email",
          "name",
          "passwordHash",
          "phone",
          "role",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "pattern": "^[-+]?\\d+$",
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "pattern": "^[A-Za-z\\s]+$",
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9._%+-]+(?:\\.[a-zA-Z0-9._%+-]+)*@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
            "type": "string"
          },
          "phone": {
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[-+]?\\d+$",
            "type": "string"
          },
          "address": {
            "minLength": 1,
            "type": "string"
          },
          "passwordHash": {
            "minLength": 1,
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/User_Role"
          },
          "accountCreatedDate": {
            "type": "string",
            "format": "date"
          },
          "borrowed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Borrowed"
            },
            "nullable": true
          },
          "reservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reservations"
            },
            "nullable": true
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notifications"
            },
            "nullable": true
          },
          "logUserActivity": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogUserActivity"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}